{
  "info": {
    "name": "FastAPI CI/CD Demo",
    "description": "Complete API collection for FastAPI CI/CD Demo application",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health & System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/healthz",
              "host": ["{{baseUrl}}"],
              "path": ["healthz"]
            }
          },
          "response": []
        },
        {
          "name": "Root Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            }
          },
          "response": []
        },
        {
          "name": "Prometheus Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/metrics",
              "host": ["{{baseUrl}}"],
              "path": ["metrics"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login (Get Token)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.access_token);",
                  "    pm.test('Token received', function () {",
                  "        pm.expect(response.access_token).to.not.be.undefined;",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "username",
                  "value": "admin",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "admin123",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "me"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('newUserId', response.id);",
                  "    pm.test('User created successfully', function () {",
                  "        pm.expect(response.id).to.not.be.undefined;",
                  "        pm.expect(response.email).to.eql('newuser@example.com');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"username\": \"newuser\",\n  \"full_name\": \"New User\",\n  \"password\": \"newpassword123\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", ""]
            }
          },
          "response": []
        },
        {
          "name": "List Users (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/?skip=0&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "1"]
            }
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"full_name\": \"Updated User Name\",\n  \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/{{newUserId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "users", "{{newUserId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Post Management",
      "item": [
        {
          "name": "Create Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('newPostId', response.id);",
                  "    pm.test('Post created successfully', function () {",
                  "        pm.expect(response.id).to.not.be.undefined;",
                  "        pm.expect(response.title).to.eql('My First API Post');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My First API Post\",\n  \"content\": \"This is the content of my first post created via the API. It demonstrates the post creation functionality of our FastAPI application.\",\n  \"published\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/posts/",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "posts", ""]
            }
          },
          "response": []
        },
        {
          "name": "List Posts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/posts/?skip=0&limit=10&published_only=true",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "posts", ""],
              "query": [
                {
                  "key": "skip",
                  "value": "0"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "published_only",
                  "value": "true"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Post by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/posts/{{newPostId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "posts", "{{newPostId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Post Title\",\n  \"content\": \"This post has been updated to demonstrate the update functionality. The content now reflects the changes made via the API.\",\n  \"published\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/posts/{{newPostId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "posts", "{{newPostId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/posts/{{newPostId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "posts", "{{newPostId}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Sample Workflow",
      "item": [
        {
          "name": "Complete User Workflow",
          "item": [
            {
              "name": "1. Health Check",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/healthz",
                  "host": ["{{baseUrl}}"],
                  "path": ["healthz"]
                }
              }
            },
            {
              "name": "2. Create New User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('workflowUserId', response.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"workflow@example.com\",\n  \"username\": \"workflowuser\",\n  \"full_name\": \"Workflow Demo User\",\n  \"password\": \"workflow123\",\n  \"is_active\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/users/",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "users", ""]
                }
              }
            },
            {
              "name": "3. Login with New User",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 200) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('workflowToken', response.access_token);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "username",
                      "value": "workflowuser",
                      "type": "text"
                    },
                    {
                      "key": "password",
                      "value": "workflow123",
                      "type": "text"
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/token",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "token"]
                }
              }
            },
            {
              "name": "4. Create Post",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('workflowPostId', response.id);",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{workflowToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Workflow Demo Post\",\n  \"content\": \"This post was created as part of the complete workflow demonstration. It shows how a user can register, login, and create content using our API.\",\n  \"published\": true\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/posts/",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "posts", ""]
                }
              }
            },
            {
              "name": "5. List All Posts",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/posts/",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "posts", ""]
                }
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ]
}