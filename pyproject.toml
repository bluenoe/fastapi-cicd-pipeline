# Ruff configuration
# Linting and code quality rules

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

# Enable linting for all Python files
include = ["*.py", "*.pyi", "**/pyproject.toml"]

# Exclude common directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "alembic/versions",
]

[tool.ruff.lint]
# Enable specific rule categories
select = [
    # Pycodestyle
    "E",  # Error
    "W",  # Warning
    
    # Pyflakes
    "F",  # Pyflakes
    
    # isort
    "I",  # Import sorting
    
    # pep8-naming
    "N",  # Naming conventions
    
    # pyupgrade
    "UP", # Python version upgrades
    
    # flake8-bugbear
    "B",  # Bug-prone constructs
    
    # flake8-simplify
    "SIM", # Code simplification
    
    # flake8-comprehensions
    "C4", # List/dict comprehensions
    
    # flake8-pie
    "PIE", # Miscellaneous lints
    
    # flake8-pytest-style
    "PT", # Pytest style
    
    # flake8-return
    "RET", # Return statement style
    
    # flake8-unused-arguments
    "ARG", # Unused arguments
    
    # flake8-use-pathlib
    "PTH", # Use pathlib instead of os.path
    
    # Ruff-specific rules
    "RUF", # Ruff-specific lints
]

# Rules to ignore
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean positional values in function calls
    "FBT003",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Allow print statements (for now)
    "T201",
    # Allow assert statements
    "S101",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and imports
"tests/**/*" = [
    "PLR2004", # Magic value comparison
    "S101",    # Use of assert
    "ARG",     # Unused function args
    "FBT",     # Boolean trap
]

# Migration files can have any structure
"alembic/versions/*" = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"